{
	"info": {
		"_postman_id": "1cb89c7a-ed1b-4704-b5f1-51019b4523d2",
		"name": "Text-to-API Documentation üìö",
		"description": "Support: [jairo@seniorgo.io](https://mailto:jairo@seniorgo.io)\n\nWelcome to the **Text-to-API** API! üöÄ This service is designed to bridge the gap between human language and structured data by converting **human-written text into JSON objects**. It‚Äôs a flexible tool that adapts to your domain-specific needs and provides a simple yet powerful way to transform unstructured input into actionable data.\n\n## ‚ú® Key Features\n\n- **Human-to-JSON Conversion** üìù ‚û°Ô∏è `{ \"json\": \"object\" }`  \n    Provide a sentence or phrase, and Text-to-API will return a JSON object based  \n    on your custom-defined structure.  \n    **Example**:  \n    Input:  \n    `\"I've spent 50 USD on a suit yesterday\"`\n    \n    Output:\n    \n\n``` json\n{\n  \"description\": \"Suit\",\n  \"amount\": 50.0,\n  \"category\": \"clothes\",\n  \"date\": \"Jan 2 2024\"\n}\n\n ```\n\n- **Customizable Target JSON** üéØ  \n    You can define your desired output format and constraints using a target JSON schema. Specify field names, types, allowed values, and even date formats to suit your use case.\n    \n\n**Example Schema**:\n\n``` json\n{\n  \"fields\": [\n    {\n      \"name\": \"description\",\n      \"type\": \"string\",\n      \"description\": \"A brief description of the expense\"\n    },\n    {\n      \"name\": \"amount\",\n      \"type\": \"number\"\n    },\n    {\n      \"name\": \"category\",\n      \"type\": \"string\",\n      \"allowed_values\": [\"food\", \"clothes\"]\n    },\n    {\n      \"name\": \"created_at\",\n      \"type\": \"date\",\n      \"format\": \"ISO-8601\",\n      \"description\": \"Date when the expense was made\"\n    }\n  ]\n}\n\n ```\n\n- **Versatile Across Domains** üåç  \n    Whether you're processing financial transactions, medical data, legal records, or any other domain, Text-to-API adapts to your needs. The quality of the output depends on the clarity of your schema and the specificity of the text input.\n    \n- **Powered by AI** ü§ñ  \n    Text-to-API uses advanced AI technology to interpret text and match it to your specified schema. While highly accurate, occasional inaccuracies may occur due to ambiguity or overly complex inputs.\n    \n\n## üõ† **Authentication: API Key**\n\nTo use Text-to-API, you need an API key for authentication. üîë  \nCurrently, users can request a **test API key** directly from the developer to explore the service.\n\n- Pass your API key in the `Authorization` header like this:\n    \n\n`Authorization: Bearer YOUR_API_KEY`\n\n## ‚ö†Ô∏è Important Notes\n\n- **Schema Quality Matters**: The clearer and more detailed your target schema, the better the output. Ambiguous schemas or overly vague text inputs may lead to errors.\n    \n- **AI is Not Perfect**: While Text-to-API strives for accuracy, it relies on AI, and occasional mismatches can happen. Use error-handling in your application for edge cases.\n    \n- **Secure Your API Key**: Treat your API key like a password; do not share it publicly.\n    \n\n## üí° Why Text-to-API?\n\nText-to-API saves you time and effort by automating the transformation of human-written content into structured, machine-readable formats. Whether you're building SaaS tools, automating workflows, or handling user-generated content, this API provides a simple yet powerful foundation for your data needs.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7558941"
	},
	"item": [
		{
			"name": "Translations",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "User-Id",
								"value": "user_2",
								"description": "A unique identifier for the end user of this translation. Using the same User-Id in multiple requests will use the same thread and be a little faster than using a different value (and creating a new thred from scratch each time).",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_base_url}}/translations",
							"host": [
								"{{api_base_url}}"
							],
							"path": [
								"translations"
							]
						},
						"description": "The `PUT /translations` endpoint processes a **human-written text** and transforms it into a structured JSON object based on the schema defined in the request body. This allows users to specify the desired format, structure, and constraints of the output JSON.\n\n### **Request Format**\n\nThe request body must be a JSON object with the following fields:\n\n#### **1.** **`translation_type`** _(string, required)_\n\nSpecifies the type of translation you want to create.\n\n- **Value**: Must always be `\"object\"` for this version of the API.\n    \n\n#### **2.** **`target_object`** _(object, required)_\n\nDefines the schema for the desired output JSON structure. It contains the following subfields:\n\n#### **2.** **`target_object`** _(object, required)_\n\nDefines the schema for the desired output JSON structure. It contains the following subfields:\n\n##### **2.1.** **`fields`** _(array of objects, required)_\n\nAn array specifying the fields to include in the output JSON. Each object in this array defines the attributes of a single field:\n\n- **`name`** _(string, required)_:  \n    The name of the field.\n    \n- **`type`** _(string, required)_:  \n    The data type of the field. Supported values are:\n    \n    - `\"string\"`\n        \n    - `\"number\"`\n        \n    - `\"boolean\"`\n        \n    - `\"date\"`\n        \n- **`allowed_values`** _(array of strings, optional)_:  \n    Specifies the acceptable values for the field.  \n    Example: For a currency field, `[\"mxn\", \"usd\", \"eur\"]`.\n    \n- **`format`** _(string, optional)_:  \n    Specifies the format of the field, if necessary.  \n    Example: `\"ISO-8601\"` for dates.\n    \n- **`description`** _(string, optional)_:  \n    Provides additional context to help the AI understand how to populate this field.  \n    ‚ö†Ô∏è _Note_: Overusing descriptions can increase response time and cost.\n    \n- **`depends_on`** _(string, optional)_:  \n    If the field depends on another field, this should be the name of the field it depends on. If `\"depends_on\"` is present, it is important to also populate `\"dependent_allowed_values\"`.\n    \n- **`dependent_allowed_values`** _(array of objects, optional, needed if_ `\"depends_on\"` _is present)_:  \n    If `\"depends_on\"` is present, this array should contain one or more objects specifying the allowed values for this field based on the value of the `\"depends_on\"` field. Each object in the array has the following structure:\n    \n    - **`value`** _(string, required)_:  \n        The value that the `\"depends_on\"` field should have to apply this dependency.\n        \n    - **`allowed_values`** _(array of strings, required)_:  \n        An array of strings indicating the allowed values this field may have if the `\"depends_on\"` field has the specified `\"value\"`.\n        \n\nExample:\n\n``` json\n{\n  \"type\": \"string\",\n  \"depends_on\": \"category\",\n  \"dependent_allowed_values\": [\n    {\n      \"value\": \"guilt-free\",\n      \"allowed_values\": [\n        \"clothes\",\n        \"entertainment\",\n        \"eating_out\"\n      ]\n    },\n    {\n      \"value\": \"fixed-costs\",\n      \"allowed_values\": [\n        \"food\",\n        \"rent\",\n        \"internet\",\n        \"phone\"\n      ]\n    }\n  ],\n  \"name\": \"sub_category\"\n}\n\n ```\n\n#### **3.** **`input_text`** _(string, required)_\n\nThe human-written text you want to translate into a JSON object.\n\nExample: \"I spent 30 USD on groceries today\"\n\n#### **4.** **`output_lang`** _(string, optional)_\n\nSpecifies the desired language for the output of this field.\n\nExample: `\"en\"` for English, `\"es\"` for Spanish."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "User-Id",
										"value": "user_2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"translation_type\": \"object\",\n  \"target_object\": {\n    \"fields\": [\n      {\n        \"allowed_values\": [],\n        \"name\": \"description\",\n        \"type\": \"string\"\n      },\n      {\n        \"type\": \"number\",\n        \"allowed_values\": [],\n        \"name\": \"amount\"\n      },\n      {\n        \"type\": \"string\",\n        \"allowed_values\": [\n          \"usd\",\n          \"eur\",\n          \"mxn\"\n        ],\n        \"name\": \"currency\"\n      },\n      {\n        \"type\": \"string\",\n        \"allowed_values\": [\n          \"guilt-free\",\n          \"fixed-costs\",\n          \"savings\",\n          \"investments\"\n        ],\n        \"name\": \"category\",\n        \"description\": \"category this expense belongs to\"\n      },\n      {\n        \"type\": \"string\",\n        \"depends_on\": \"category\",\n        \"dependent_allowed_values\": [\n          {\n            \"value\": \"guilt-free\",\n            \"allowed_values\": [\n              \"clothes\",\n              \"entertainment\",\n              \"eating_out\"\n            ]\n          },\n          {\n            \"value\": \"fixed-costs\",\n            \"allowed_values\": [\n              \"food\",\n              \"rent\",\n              \"internet\",\n              \"phone\"\n            ]\n          },\n          {\n            \"value\": \"savings\",\n            \"allowed_values\": [\n              \"emergency\",\n              \"travel\",\n              \"gifts\"\n            ]\n          },\n          {\n            \"value\": \"investments\",\n            \"allowed_values\": [\n              \"stocks\",\n              \"bonds\",\n              \"crypto\"\n            ]\n          }\n        ],\n        \"name\": \"sub_category\"\n      },\n      {\n        \"type\": \"date\",\n        \"format\": \"ISO-8601\",\n        \"description\": \"Date when the expense was made\",\n        \"name\": \"created_at\"\n      }\n    ]\n  },\n  \"lang\": \"english\",\n  \"input_text\": \"150 USD in groceries at walmart\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://ec2-3-91-85-57.compute-1.amazonaws.com:8081/v1/translations",
									"protocol": "http",
									"host": [
										"ec2-3-91-85-57",
										"compute-1",
										"amazonaws",
										"com"
									],
									"port": "8081",
									"path": [
										"v1",
										"translations"
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"\",\n    \"translation_request\": {\n        \"current_date\": \"Thursday, 16-Jan-25 03:20:23 UTC\",\n        \"input_text\": \"150 USD in groceries at walmart\",\n        \"lang\": \"english\",\n        \"translation_type\": \"object\",\n        \"target_object\": {\n            \"fields\": [\n                {\n                    \"allowed_values\": [],\n                    \"dependent_allowed_values\": null,\n                    \"depends_on\": null,\n                    \"name\": \"description\",\n                    \"required\": null,\n                    \"type\": \"string\"\n                },\n                {\n                    \"allowed_values\": [],\n                    \"dependent_allowed_values\": null,\n                    \"depends_on\": null,\n                    \"name\": \"amount\",\n                    \"required\": null,\n                    \"type\": \"number\"\n                },\n                {\n                    \"allowed_values\": [\n                        \"usd\",\n                        \"eur\",\n                        \"mxn\"\n                    ],\n                    \"dependent_allowed_values\": null,\n                    \"depends_on\": null,\n                    \"name\": \"currency\",\n                    \"required\": null,\n                    \"type\": \"string\"\n                },\n                {\n                    \"allowed_values\": [\n                        \"guilt-free\",\n                        \"fixed-costs\",\n                        \"savings\",\n                        \"investments\"\n                    ],\n                    \"dependent_allowed_values\": null,\n                    \"depends_on\": null,\n                    \"name\": \"category\",\n                    \"required\": null,\n                    \"type\": \"string\"\n                },\n                {\n                    \"allowed_values\": null,\n                    \"dependent_allowed_values\": [\n                        {\n                            \"value\": \"guilt-free\",\n                            \"allowed_values\": [\n                                \"clothes\",\n                                \"entertainment\",\n                                \"eating_out\"\n                            ]\n                        },\n                        {\n                            \"value\": \"fixed-costs\",\n                            \"allowed_values\": [\n                                \"food\",\n                                \"rent\",\n                                \"internet\",\n                                \"phone\"\n                            ]\n                        },\n                        {\n                            \"value\": \"savings\",\n                            \"allowed_values\": [\n                                \"emergency\",\n                                \"travel\",\n                                \"gifts\"\n                            ]\n                        },\n                        {\n                            \"value\": \"investments\",\n                            \"allowed_values\": [\n                                \"stocks\",\n                                \"bonds\",\n                                \"crypto\"\n                            ]\n                        }\n                    ],\n                    \"depends_on\": \"category\",\n                    \"name\": \"sub_category\",\n                    \"required\": null,\n                    \"type\": \"string\"\n                },\n                {\n                    \"allowed_values\": null,\n                    \"dependent_allowed_values\": null,\n                    \"depends_on\": null,\n                    \"name\": \"created_at\",\n                    \"required\": null,\n                    \"type\": \"date\"\n                }\n            ]\n        }\n    },\n    \"mapped_object\": {\n        \"amount\": 150,\n        \"category\": \"fixed-costs\",\n        \"created_at\": \"2025-01-16\",\n        \"currency\": \"usd\",\n        \"description\": \"150 USD in groceries at walmart\",\n        \"sub_category\": \"food\"\n    }\n}"
						},
						{
							"name": "Invalid Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "User-Id",
										"value": "user_2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"translation_type\": \"object\",\n  \"target_object\": {\n    \"fields\": [\n      {\n        \"name\": \"description\",\n        \"type\": \"string\",\n        \"description\": \"A brief description of the expense\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"number\"\n      },\n      {\n        \"name\": \"currency\",\n        \"type\": \"string\",\n        \"allowed_values\": [\"mxn\", \"usd\", \"eur\"]\n      },\n      {\n        \"name\": \"category\",\n        \"type\": \"string\",\n        \"allowed_values\": [\"food\", \"clothes\"],\n        \"output_lang\": \"en\"\n      },\n      {\n        \"name\": \"created_at\",\n        \"type\": \"date\",\n        \"format\": \"ISO-8601\",\n        \"description\": \"Date when the expense was made\"\n      }\n    ]\n  },\n  \"lang\": \"es\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://ec2-3-91-85-57.compute-1.amazonaws.com:8081/v1/translations",
									"protocol": "http",
									"host": [
										"ec2-3-91-85-57",
										"compute-1",
										"amazonaws",
										"com"
									],
									"port": "8081",
									"path": [
										"v1",
										"translations"
									]
								}
							},
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Validation error: invalid request: validation_error: input text is required\"\n}"
						}
					]
				}
			],
			"description": "The `/translations` endpoints let you perform human-written content into structured, machine-readable formats."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{api_key}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_base_url",
			"value": "http://ec2-3-91-85-57.compute-1.amazonaws.com:8081/"
		}
	]
}